services:
  # ✅ PostgreSQL Database
  db:
    image: postgres:latest
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
  
  # ✅ Redis (Message Broker for Celery)
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  # ✅ Backend API (FastAPI + CrewAI)
  backend:
    build: ./backend
    restart: always
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    command: uvicorn backend.api.main:app --host 0.0.0.0 --port 8000 --reload

  # ✅ Celery Worker (Handles AI Analysis Tasks)
  celery_worker:
    build: ./backend
    restart: always
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379/0
    command: celery -A backend.scheduler worker --loglevel=info

  # ✅ Celery Beat (Schedules AI Reports)
  celery_beat:
    build: ./backend
    restart: always
    depends_on:
      - backend
      - redis
    env_file:
      - .env
    environment:
      REDIS_URL: redis://redis:6379/0
    command: celery -A backend.scheduler beat --loglevel=info

  # ✅ Streamlit Frontend
  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "8501:8501"

volumes:
  postgres_data:
